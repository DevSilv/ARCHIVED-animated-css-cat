$cat-color: gray;
$cat-head-color: lightgray;
$cat-ear-color: $cat-color;
$cat-eye-color: yellow;
$cat-pupil-color: black;
$cat-nose-color: salmon;
$cat-tongue-color: salmon;
$cat-leg-color: #595959;
$cat-paw-color: #595959;
$cat-tail-color: #595959;

$cat-radius: 50px;
$cat-width: $cat-radius * 2;
$cat-height: $cat-radius * 2;
$cat-head-width: $cat-width / 2+$cat-width / 4;
$cat-head-height: $cat-width / 2 - $cat-width / 2 * 0.2;
$cat-eye-height: 6px;
$cat-eye-width: 12px;
$cat-ear-height: 10px;
$cat-ear-width: 12px;
$cat-pupil-width: 5px;
$cat-pupil-height: $cat-eye-height;
$cat-nose-width: 10px;
$cat-nose-height: 10px;
$cat-mouth-width: 10px;
$cat-mouth-height: 10px;
$cat-tongue-width: 6px;
$cat-tongue-height: 8px;
$cat-mouth-thickness: 1px;
$cat-leg-width: 14px;
$cat-paw-width: 14px;
$cat-legs-distance: 6px;
$cat-front-thigh-height: 21px;
$cat-back-thigh-height: 39px;
$cat-tail-thickness: 7px;

$paw-cleaning-animation-duration: 20s;

body {
  .cat {
    margin-top: $cat-height * 0.5;
    margin-bottom: $cat-width * 0.5;
    background-color: $cat-color;
    width: $cat-width;
    height: $cat-height;
    border-radius: $cat-radius;
    margin-left: auto;
    margin-right: auto;

    .cat-shadow {
      // The following background-image property has to have set
      //  the second color value as the same value as the background-color
      //  property of the whole cat (in order to look like the cat's shadow).
      background-image: radial-gradient(rgba(0, 0, 0, 0.2) 50%, lightgoldenrodyellow 70%);
      height: $cat-width;
      width: $cat-height;
      border-radius: 50%;
      position: absolute;
      // The value of the following cat's shadow z-index property might be
      //  set to "-1", but it must be set to "-2" because of the z-index
      //  property value of the cat's tail (that is already set to "-1").
      z-index: -2;
      // Although the following transform property value has fixed values
      //  inside it (so it is not as much scalable as desirable in the case of
      //  language with variables, such as Sass), it works.
      transform: rotateX(-70deg) rotateY(10deg) translateZ(40px) translateX(30px);
    }

    .cat-head {
      position: relative;

      margin: {
        left: auto;
        right: auto;
      }

      top: -($cat-width / 2) * 0.2;
      background-color: $cat-head-color;
      width: $cat-head-width;
      height: $cat-head-height;
      border-radius: $cat-head-height $cat-head-height $cat-head-height / 2 $cat-head-height / 2;

      animation: {
        name: cat-head-moving;
        duration: $paw-cleaning-animation-duration;
        iteration-count: infinite;
      }

      .cat-ears {
        position: relative;
        width: $cat-head-width / 2.5;

        margin: {
          left: auto;
          right: auto;
        }

        .cat-ear {
          position: absolute;
          top: -$cat-ear-height;
          width: 0;
          height: 0;

          border: {
            style: solid;
            color: transparent;
            top-width: 0;
            left-width: $cat-ear-width / 2;
            right-width: $cat-ear-width / 2;
            bottom: $cat-ear-height solid $cat-ear-color;
          }
        }

        // The following code is currently off,
        //  maybe for future improvements.
        // .cat-ear-left {
        //   transform: rotateZ(-5deg);
        //   animation-name: cat-left-ear-perking;
        //   animation-duration: 8s;
        //   animation-iteration-count: infinite;
        //   left: 5px;
        //   top: -1px;
        // }

        // The following code is currently off,
        //  maybe for future improvements.
        // @keyframes cat-left-ear-perking {
        //   0%,
        //   85%,
        //   95%,
        //   100% {
        //     transform: rotate(-25deg) {
        //       origin: center bottom;
        //     }
        //   }
        //   87.5%,
        //   97.5% {
        //     transform: rotate(-35deg) {
        //       origin: center bottom;
        //     }
        //   }
        // }

        .cat-ear-right {
          left: $cat-head-width / 2.5 - $cat-ear-width;
        }
      }

      .cat-eyes {
        position: relative;
        width: $cat-head-width / 1.75;
        top: 10px;

        margin: {
          left: auto;
          right: auto;
        }

        .cat-eye {
          background-color: $cat-eye-color;
          height: $cat-eye-height;
          width: $cat-eye-width;

          border: {
            top-left-radius: 0;
            top-right-radius: 0;
            bottom-right-radius: 5px;
            bottom-left-radius: 5px;
          }

          animation: {
            name: cat-eye-squinting;
            duration: $paw-cleaning-animation-duration;
            iteration-count: infinite;
          }
        }

        .cat-eye-left,
        .cat-eye-right {
          position: absolute;
        }

        .cat-eye-right {
          left: $cat-head-width / 1.75 - $cat-eye-width;
        }

        .cat-pupil {
          position: absolute;
          left: 0;
          right: 0;

          margin: {
            left: auto;
            right: auto;
          }

          height: $cat-pupil-height;
          width: $cat-pupil-width;

          border: {
            bottom-left-radius: 50%;
            bottom-right-radius: 50%;
          }

          background-color: $cat-pupil-color;
        }
      }

      // The following ".cat-nose" rule might probably
      //  be recognized as built in an incorrect way -
      //  such that it causes nonsymetric placement
      //  of the cat's nose along the X-axis (it should
      //  be shifted one pixel to the left or so). But
      //  I decided to leave it as is, as long as it works
      //  and the cat does not demand more symmetry
      //  than this rule already provides.
      .cat-nose {
        position: relative;
        top: 10px;

        margin: {
          left: auto;
          right: auto;
        }

        background-color: transparent;
        width: $cat-nose-width;
        height: $cat-nose-height;

        border: {
          top: 5px solid transparent;
          bottom: 5px solid transparent;
          left: 5px solid transparent;
          right: 5px solid transparent;
          radius: 50%;
        }

        overflow: hidden;
        transform: rotate(180deg);

        &:before {
          position: absolute;
          top: -1px;
          left: -3px;
          content: '';
          background-color: transparent;

          border: solid 8px transparent {
            bottom-color: $cat-nose-color;
            top-width: 0;
          }
        }
      }

      // The following code is currently off,
      //  maybe for future improvements.
      // .cat-whiskers {
      //   position: relative;
      //   top: 0;
      //   left: 12px;
      //   .cat-whisker {
      //     position: absolute;
      //     width: 20px;
      //     border-top: 1px solid $cat-color;
      //     height: 0;
      //   }
      //   .cat-whisker-top-left {
      //     transform: rotate(15deg);
      //   }
      //   .cat-whisker-bottom-left {
      //     top: 6px;
      //     transform: rotate(-15deg);
      //   }
      //   .cat-whisker-top-right {
      //     left: 31px;
      //     transform: rotate(-15deg);
      //   }
      //   .cat-whisker-bottom-right {
      //     top: 6px;
      //     left: 31px;
      //     transform: rotate(15deg);
      //   }
      // }

      .cat-mouths {
        position: relative;
        // The value of the following "top" property must be
        //  set to "-1" because the way that the cat's nose
        //  is built causes the nose to have "cut" one bottom
        //  pixel (or so). If it were not set to "-1", the cat's
        //  mouth would be placed to far from the nose.
        top: -1px;

        .cat-mouth {
          position: absolute;
          right: 0;
          left: 0;

          margin: {
            left: auto;
            right: auto;
          }

          background-color: transparent;
          width: $cat-mouth-width;
          height: $cat-mouth-height;

          border: $cat-mouth-thickness solid gray {
            radius: 50%;
            // The following "top-color" and "left-color" properties
            //  must be defined with its "transparent" values. There
            //  cannot be defined "top: none" and "left: none"
            //  properties, because if they were defined, then there
            //  would appear odd effects (possibly because of
            //  the percentage value of the "radius" property).
            top-color: transparent;
            left-color: transparent;
          }

          transform: rotate(45deg);
        }

        .cat-mouth-left {
          left: -$cat-mouth-width - $cat-mouth-thickness;
        }

        .cat-mouth-right {
          // The following "left" property has one pixel
          //  added to its value because of (most probably)
          //  incorrectly built cat's nose rule (see).
          left: $cat-mouth-width + $cat-mouth-thickness + 1px;
        }

        .cat-tongue {
          position: absolute;
          top: $cat-mouth-height + 2 * $cat-mouth-thickness;
          left: 0;
          right: 0;

          margin: {
            left: auto;
            right: auto;
          }

          background-color: $cat-tongue-color;
          width: $cat-tongue-width;
          height: $cat-tongue-height;
          z-index: 1;

          border: {
            bottom-left-radius: 50%;
            bottom-right-radius: 50%;
          }

          animation: {
            name: cat-tongue;
            duration: $paw-cleaning-animation-duration;
            iteration-count: infinite;
          }
        }
      }
    }

    .cat-legs {
      position: relative;
      width: 0;

      margin: {
        left: auto;
        right: auto;
      }

      .cat-leg {
        .cat-leg-part {
          background-color: $cat-leg-color;
          width: $cat-leg-width;

          .cat-paw-left,
          .cat-paw-right {
            position: relative;
            top: 34px;
            background-color: $cat-paw-color;
            width: $cat-paw-width;
            height: 5px;

            border: {
              top-left-radius: 50%;
              top-right-radius: 50%;
            }
          }
        }
      }

      .cat-leg-left-top,
      .cat-leg-right-top {
        height: $cat-front-thigh-height;
      }

      .cat-leg-left-bottom,
      .cat-leg-right-bottom {
        height: $cat-back-thigh-height;

        border: {
          bottom-left-radius: 40%;
          bottom-right-radius: 40%;
        }
      }

      .cat-leg-left,
      .cat-leg-right {
        position: absolute;
      }

      .cat-leg-left {
        left: -$cat-leg-width - $cat-legs-distance / 2;

        transform: rotateZ(-3deg) {
          origin: top center;
        }

        .cat-leg-left-top {
          border: {
            top-left-radius: 80%;
            top-right-radius: 20%;
          }
        }

        .cat-leg-left-bottom {
          animation: {
            name: cat-leg-left-moving;
            duration: $paw-cleaning-animation-duration;
            iteration-count: infinite;
          }

          .cat-paw-left {
            transform: rotateZ(3deg);

            animation: {
              name: cat-paw-left-unclench;
              duration: $paw-cleaning-animation-duration;
              iteration-count: infinite;
            }
          }
        }
      }

      .cat-leg-right {
        left: $cat-legs-distance / 2;

        transform: rotateZ(3deg) {
          origin: top center;
        }

        .cat-leg-right-top {
          border: {
            top-left-radius: 20%;
            top-right-radius: 80%;
          }
        }

        .cat-leg-right-bottom {
          animation: {
            name: cat-leg-right-moving;
            duration: $paw-cleaning-animation-duration;
            iteration-count: infinite;
          }

          .cat-paw-right {
            transform: rotateZ(-3deg);

            animation: {
              name: cat-paw-right-unclench;
              duration: $paw-cleaning-animation-duration;
              iteration-count: infinite;
            }
          }
        }
      }
    }

    .cat-tail {
      position: relative;
      top: $cat-height - $cat-head-height - $cat-tail-thickness;
      left: $cat-width / 2;
      z-index: -1;

      .cat-tail-part {
        position: absolute;
        width: 50px;
        height: $cat-tail-thickness;
        background-color: $cat-tail-color;
      }

      .cat-tail-part-moving-container {
        position: absolute;
        left: calc(50px - 15px);

        .cat-tail-part-moving {
          position: relative;
          left: 15px;
          height: 7px;
          width: 15px;
          background-color: $cat-leg-color;
          animation: cat-tail-moving 5s infinite;
        }

        .cat-tail-part-moving-last {
          border: {
            bottom-right-radius: 80%;
            top-right-radius: 30%;
          }
        }
      }
    }

    @keyframes cat-tail-moving {

      0%,
      50% {
        transform: none {
          origin: left bottom;
        }

        animation-timing-function: ease-in-out;
      }

      75% {
        transform: rotate(-10deg) {
          origin: left bottom;
        }

        animation-timing-function: ease-in-out;
      }

      100% {
        transform: none {
          origin: left bottom;
        }

        animation-timing-function: linear;
      }
    }

    // The following keyframes are placed next to each other,
    //  because the animations that they create (cleaning paws)
    //  are to be synchronized.

    @keyframes cat-head-moving {

      0%,
      30%,
      50%,
      70%,
      100% {
        transform: none;
      }

      35%,
      45% {
        transform: rotateX(-35deg) rotateY(-45deg);
      }

      40% {
        transform: rotateX(-30deg) rotateY(-30deg);
      }

      55%,
      65% {
        transform: rotateX(35deg) rotateY(-45deg);
      }

      60% {
        transform: rotateX(30deg) rotateY(-30deg);
      }
    }

    @keyframes cat-tongue {

      0%,
      30%,
      40%,
      47%,
      53%,
      60%,
      70%,
      100% {
        transform: scaleY(0) {
          origin: top center;
        }
      }

      35%,
      45%,
      55%,
      65% {
        transform: scaleY(1) {
          origin: top center;
        }
      }
    }

    @keyframes cat-eye-squinting {

      0%,
      30%,
      50%,
      70%,
      100% {
        transform: none;
      }

      35%,
      45%,
      55%,
      65% {
        transform: scale(1.2, 0.1);
      }
    }

    @keyframes cat-leg-right-moving {

      0%,
      30%,
      50%,
      100% {
        transform: none;
      }

      35%,
      45% {
        transform: rotateX(-180deg) rotateZ(20deg) {
          origin: top left;
        }
      }
    }

    @keyframes cat-leg-left-moving {

      0%,
      50%,
      70%,
      100% {
        transform: none;
      }

      55%,
      65% {
        transform: rotateX(-180deg) rotateZ(-20deg) {
          origin: top left;
        }
      }
    }

    @keyframes cat-paw-right-unclench {

      0%,
      30%,
      50%,
      100% {
        transform: none;
      }

      35%,
      45% {
        transform: scale(0.8, 2) {
          origin: top center;
        }

        border-radius: 80%;
      }
    }

    @keyframes cat-paw-left-unclench {

      0%,
      50%,
      70%,
      100% {
        transform: none;
      }

      55%,
      65% {
        transform: scale(0.8, 2) {
          origin: top center;
        }

        border-radius: 80%;
      }
    }
  }
}